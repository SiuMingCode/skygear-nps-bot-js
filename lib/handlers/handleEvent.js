'use strict';

const { log, verify } = require('../util');
const { saveReason } = require('./events');

module.exports = req => {
  let {
    team_id: teamID,
    challenge, event, token
  } = log(JSON.parse(req.body));

  if (verify(token)) {
    // one-time verification to enable event subscription
    if (challenge) {
      return challenge;
    }
    let {
      bot_id: botID,
      channel: channelID,
      user: userID,
      text: reason,
      type
    } = event;
    switch (type) {
      case 'message':
        // ignore bot messages, avoid loop with self
        return botID ? '' : saveReason(teamID, userID, reason, channelID);
      default:
        return 'Invalid event type';
    }
  } else {
    return 'Unknown source'; // Please install the app via LANDING_PAGE_URL
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oYW5kbGVycy9oYW5kbGVFdmVudC5qcyJdLCJuYW1lcyI6WyJsb2ciLCJ2ZXJpZnkiLCJyZXF1aXJlIiwic2F2ZVJlYXNvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJ0ZWFtX2lkIiwidGVhbUlEIiwiY2hhbGxlbmdlIiwiZXZlbnQiLCJ0b2tlbiIsIkpTT04iLCJwYXJzZSIsImJvZHkiLCJib3RfaWQiLCJib3RJRCIsImNoYW5uZWwiLCJjaGFubmVsSUQiLCJ1c2VyIiwidXNlcklEIiwidGV4dCIsInJlYXNvbiIsInR5cGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTSxFQUFFQSxHQUFGLEVBQU9DLE1BQVAsS0FBa0JDLFFBQVEsU0FBUixDQUF4QjtBQUNBLE1BQU0sRUFBRUMsVUFBRixLQUFpQkQsUUFBUSxVQUFSLENBQXZCOztBQUVBRSxPQUFPQyxPQUFQLEdBQWtCQyxHQUFELElBQVM7QUFDeEIsTUFBSTtBQUNGQyxhQUFTQyxNQURQO0FBRUZDLGFBRkUsRUFFU0MsS0FGVCxFQUVnQkM7QUFGaEIsTUFHQVgsSUFBSVksS0FBS0MsS0FBTCxDQUFXUCxJQUFJUSxJQUFmLENBQUosQ0FISjs7QUFLQSxNQUFJYixPQUFPVSxLQUFQLENBQUosRUFBbUI7QUFDakI7QUFDQSxRQUFJRixTQUFKLEVBQWU7QUFDYixhQUFPQSxTQUFQO0FBQ0Q7QUFDRCxRQUFJO0FBQ0ZNLGNBQVFDLEtBRE47QUFFRkMsZUFBU0MsU0FGUDtBQUdGQyxZQUFNQyxNQUhKO0FBSUZDLFlBQU1DLE1BSko7QUFLRkM7QUFMRSxRQU1BYixLQU5KO0FBT0EsWUFBUWEsSUFBUjtBQUNFLFdBQUssU0FBTDtBQUNFO0FBQ0EsZUFBT1AsUUFBUSxFQUFSLEdBQWFiLFdBQVdLLE1BQVgsRUFBbUJZLE1BQW5CLEVBQTJCRSxNQUEzQixFQUFtQ0osU0FBbkMsQ0FBcEI7QUFDRjtBQUNFLGVBQU8sb0JBQVA7QUFMSjtBQU9ELEdBbkJELE1BbUJPO0FBQ0wsV0FBTyxnQkFBUCxDQURLLENBQ21CO0FBQ3pCO0FBQ0YsQ0E1QkQiLCJmaWxlIjoiaGFuZGxlRXZlbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGxvZywgdmVyaWZ5IH0gPSByZXF1aXJlKCcuLi91dGlsJylcbmNvbnN0IHsgc2F2ZVJlYXNvbiB9ID0gcmVxdWlyZSgnLi9ldmVudHMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChyZXEpID0+IHtcbiAgbGV0IHtcbiAgICB0ZWFtX2lkOiB0ZWFtSUQsXG4gICAgY2hhbGxlbmdlLCBldmVudCwgdG9rZW5cbiAgfSA9IGxvZyhKU09OLnBhcnNlKHJlcS5ib2R5KSlcblxuICBpZiAodmVyaWZ5KHRva2VuKSkge1xuICAgIC8vIG9uZS10aW1lIHZlcmlmaWNhdGlvbiB0byBlbmFibGUgZXZlbnQgc3Vic2NyaXB0aW9uXG4gICAgaWYgKGNoYWxsZW5nZSkge1xuICAgICAgcmV0dXJuIGNoYWxsZW5nZVxuICAgIH1cbiAgICBsZXQge1xuICAgICAgYm90X2lkOiBib3RJRCxcbiAgICAgIGNoYW5uZWw6IGNoYW5uZWxJRCxcbiAgICAgIHVzZXI6IHVzZXJJRCxcbiAgICAgIHRleHQ6IHJlYXNvbixcbiAgICAgIHR5cGVcbiAgICB9ID0gZXZlbnRcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ21lc3NhZ2UnOlxuICAgICAgICAvLyBpZ25vcmUgYm90IG1lc3NhZ2VzLCBhdm9pZCBsb29wIHdpdGggc2VsZlxuICAgICAgICByZXR1cm4gYm90SUQgPyAnJyA6IHNhdmVSZWFzb24odGVhbUlELCB1c2VySUQsIHJlYXNvbiwgY2hhbm5lbElEKVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICdJbnZhbGlkIGV2ZW50IHR5cGUnXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnVW5rbm93biBzb3VyY2UnIC8vIFBsZWFzZSBpbnN0YWxsIHRoZSBhcHAgdmlhIExBTkRJTkdfUEFHRV9VUkxcbiAgfVxufVxuIl19